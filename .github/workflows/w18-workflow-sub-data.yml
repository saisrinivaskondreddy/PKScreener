# """
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the "Software"), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """
name: 18. Sub Data
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Run Details'
        required: false
        default: 'Sub Data Gen'
      targetPythonVersion:
        description: 'Target Python version: 3.9 , 3.10, 3.11 ?'
        required: false
        type: string
        default: '3.12'
      runson:
          description: 'Runner OS. e.g: ubuntu-latest, windows-latest or macos-latest'
          required: false
          default: 'ubuntu-latest'
      subtype:
          description: 'subtype: update or add or remove'
          required: false
          default: 'update'
      userid:
        description: 'sub user ID'
        required: false
        type: number
        default: 0
      subvalue:
        description: 'sub value'
        required: false
        type: string
        default: '0'

  schedule:
  - cron: '29 8 * * *'
  #- cron: '29 * * * *'

run-name: ${{ inputs.name || 'Sub Data Gen'}}

jobs:

  Download_Sub_Data:

    runs-on: ${{ inputs.runson || 'ubuntu-latest'}} #ubuntu-latest #windows-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v4
      with:
        ref: SubData

    - name: Set up Python 
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.targetPythonVersion  || 3.12 }}

    - name: Environment setup 
      shell: bash
      run: |
        pip3 uninstall -y PKNSETools
        pip3 uninstall -y PKDevTools
        pip3 install PKDevTools
        pip3 install PKNSETools

    - name: Configure env.dev file
      run: |
        python3 -c "import os; file = open('.env.dev', 'w'); file.write('CHAT_ID='+os.environ['CHAT_ID_PROD']+'\n'); file.write('TOKEN='+os.environ['TOKEN_DEV']+'\n'); file.write('chat_idADMIN='+os.environ['CHAT_IDADMIN_DEV']+'\n'); file.write('GITHUB_TOKEN='+os.environ['GITHUB_TOKEN']+'\n'); file.write('TURSO_TOKEN='+os.environ['TURSO_TOKEN']+'\n'); file.write('TDU='+os.environ['TDU']+'\n'); file.write('TAT='+os.environ['TAT']+'\n'); file.close()"
        python3 -c "import os; file = open('pkscreener/.env.dev', 'w'); file.write('CHAT_ID='+os.environ['CHAT_ID_PROD']+'\n'); file.write('TOKEN='+os.environ['TOKEN_DEV']+'\n'); file.write('chat_idADMIN='+os.environ['CHAT_IDADMIN_DEV']+'\n'); file.write('GITHUB_TOKEN='+os.environ['GITHUB_TOKEN']+'\n'); file.write('TURSO_TOKEN='+os.environ['TURSO_TOKEN']+'\n'); file.write('TDU='+os.environ['TDU']+'\n'); file.write('TAT='+os.environ['TAT']+'\n'); file.close()"
      shell: bash
      env:
        CHAT_ID_PROD : ${{secrets.CHAT_ID_PROD}}
        TOKEN_DEV : ${{secrets.TOKEN_DEV}}
        CHAT_IDADMIN_DEV : ${{secrets.CHAT_IDADMIN_DEV}}
        GITHUB_TOKEN : ${{secrets.GITHUB_TOKEN}}
        TURSO_TOKEN : ${{secrets.TURSO_TOKEN}}
        TDU : ${{secrets.TURSO_DATABASE_URL}}
        TAT : ${{secrets.TURSO_AUTH_TOKEN}}
  
    - name: Update Sub Data
      shell: bash
      timeout-minutes: 5
      continue-on-error: true
      if: ${{ inputs.subtype == 'update' || inputs.subtype == ''}}
      run: |
        python3 .github/workflows/subworkflows.py --branchname SubData --updatesubscriptions
        ls -l results/Data
        git status

    - name: Add Sub Data
      shell: bash
      timeout-minutes: 2
      continue-on-error: true
      if: ${{ inputs.subtype == 'add' }}
      run: |
        python3 .github/workflows/subworkflows.py --branchname SubData --addsubscription --subscriptionvalue ${{ inputs.subvalue }} --userid ${{ inputs.userid }}
        ls -l results/Data
        git status
  
    - name: Remove Sub Data
      shell: bash
      timeout-minutes: 2
      continue-on-error: true
      if: ${{ inputs.subtype == 'remove' }}
      run: |
        python3 .github/workflows/subworkflows.py --branchname SubData --removesubscription --userid ${{ inputs.userid }}
        ls -l results/Data
        git status

    - name: Push Sub Data
      continue-on-error: true
      timeout-minutes: 5
      shell: bash
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        git config --global http.postBuffer 150000000
        # git remote update
        # git fetch
        git pull -v origin +SubData
        git add results/Data/*.pdf --force
        git add results/Data/*.pdf -u
        git commit -m "GitHub-Action-Workflow-SubData-(Default-Config)"
        git push -v -u origin +SubData
      env:
        GITHUB_TOKEN : ${{secrets.GITHUB_TOKEN}}
        
    - name: Squash Commits (Python)
      shell: bash
      timeout-minutes: 5
      continue-on-error: true
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git config --global http.postBuffer 150000000
        git pull -v origin +SubData
        python3 .github/workflows/squash.py --b SubData -m "GitHub-Action-Workflow-SubData-(Default-Config)"
      env:
        GITHUB_TOKEN : ${{secrets.GITHUB_TOKEN}}

    - name: Delete this workflow run
      continue-on-error: true
      shell: bash
      run: |
        gh run list --status success --limit 1000 --json databaseId -q '.[].databaseId' | xargs -IID gh api "repos/$(gh repo view --json nameWithOwner -q .nameWithOwner)/actions/runs/ID" -X DELETE
        gh run list --status cancelled --limit 1000 --json databaseId -q '.[].databaseId' | xargs -IID gh api "repos/$(gh repo view --json nameWithOwner -q .nameWithOwner)/actions/runs/ID" -X DELETE
      env:
        GH_TOKEN : ${{secrets.GITHUB_TOKEN}}
